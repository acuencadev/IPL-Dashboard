{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchTeam","a","fetch","process","response","json","data","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42500831.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if (!match) return null;\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n            <div>\r\n                <span className=\"vs\">vs</span>\r\n                <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n            <div className=\"additional-details\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1}, {match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchDetailCard;\r\n","import { React } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MatchSmallCard.scss\";\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchSmallCard;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport MatchDetailCard from \"../components/MatchDetailCard\";\r\nimport MatchSmallCard from \"../components/MatchSmallCard\";\r\n\r\nimport \"./TeamPage.scss\";\r\n\r\nexport const TeamPage = () => {\r\n    const [team, setTeam] = useState({matches: []});\r\n    const { teamName } = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchTeam = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n\r\n                setTeam(data);\r\n            };\r\n\r\n            fetchTeam();\r\n        },\r\n        [teamName]\r\n    );\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h1>Team not found</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\"><h1 className=\"team-name\">{team.teamName}</h1></div>\r\n            <div className=\"win-loss-section\">\r\n                Wins / Losses\r\n\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n            </div>\r\n\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeamPage;\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./YearSelector.scss\";\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            { years.map(year =>\r\n                <li>\r\n                    <Link key={year} to ={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>)\r\n            }\r\n        </ol>\r\n    )\r\n}","import {React, useEffect, useState} from 'react';\r\nimport MatchDetailCard from \"../components/MatchDetailCard\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport './MatchPage.scss';\r\nimport {YearSelector} from \"../components/YearSelector\";\r\n\r\nexport const MatchPage = () => {\r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n\r\n                setMatches(data);\r\n            };\r\n\r\n            fetchMatches();\r\n        },\r\n        [teamName, year]\r\n    );\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3>Select Year</h3>\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n                {matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchPage;\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\n\r\nimport \"./HomePage.scss\";\r\nimport {TeamTile} from \"../components/TeamTile\";\r\n\r\nexport const HomePage = () => {\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/`);\r\n                const data = await response.json();\r\n\r\n                setTeams(data);\r\n            };\r\n\r\n            fetchAllTeams();\r\n        },\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">Java Brains IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import './App.scss';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport TeamPage from \"./pages/TeamPage\";\nimport MatchPage from \"./pages/MatchPage\";\nimport HomePage from \"./pages/HomePage\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <Switch>\n                <Route path=\"/teams/:teamName/matches/:year\">\n                    <MatchPage />\n                </Route>\n                <Route path=\"/teams/:teamName\">\n                    <TeamPage />\n                </Route>\n                <Route path=\"/\">\n                    <HomePage />\n                </Route>\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}